.overflow-x-auto.bg-base-100.rounded-lg.mt-10 class="hidden md:block"
  table.table.table-zebra.w-full
    thead.bg-base-200
      tr
        th = t('admin.bookings.table.number')
        th = t('admin.bookings.table.email')
        th = t('admin.bookings.table.route')
        th = t('admin.bookings.table.departure')
        th = t('admin.bookings.table.payment_method')
        th = t('admin.bookings.table.payment_status')
        th = t('admin.bookings.table.action')
    tbody
      - @bookings.each_with_index do |booking, index|
        tr
          td.font-bold = index + 1
          td = booking.user.email
          td = "#{booking.start_stop.location.name} - #{booking.end_stop.location.name}"
          td = "#{booking.tickets.first&.schedule&.formatted_departure_date} - #{booking.tickets.first&.schedule&.formatted_departure_time}"
          td
            - case booking.payment_method
            - when 'cash'
              span.badge.badge-primary = t('admin.bookings.payment_methods.cash')
            - when 'online'
              span.badge.badge-accent = t('admin.bookings.payment_methods.online')
          td
            - case booking.payment_status
            - when 'pending'
              span.badge.badge-warning = t('admin.bookings.payment_statuses.pending')
            - when 'completed'
              span.badge.badge-success = t('admin.bookings.payment_statuses.completed')
            - when 'failed'
              span.badge.badge-error = t('admin.bookings.payment_statuses.failed')
          td.flex.space-x-2
            = link_to admin_booking_path(booking), class: 'btn btn-sm', data: { turbo: false } do
              svg.lucide.lucide-eye xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                path d="M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0"
                circle cx="12" cy="12" r="3"

div class="bg-base-100 rounded-lg mt-10 block md:hidden"
  - @bookings.each_with_index do |booking, index|
    .bg-base-200.p-4.mb-4.rounded-lg.shadow-md
      .flex.justify-between
        .font-bold.text-lg Booking ##{index + 1}
        = link_to admin_booking_path(booking), class: 'btn btn-sm', data: { turbo: false } do
          svg.lucide.lucide-eye xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
            path d="M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0"
            circle cx="12" cy="12" r="3"
      .mt-2.gap-y-2
        .flex.gap-2
          span.font-semibold Email:
          = booking.user.email
        .flex.gap-2
          span.font-semibold
          = "#{t('admin.bookings.table.route')}: #{booking.start_stop.location.name} - #{booking.end_stop.location.name}"
        .flex.gap-2
          span.font-semibold
          = "#{t('admin.bookings.table.departure')}: #{booking.tickets.first&.schedule&.formatted_departure_date} - #{booking.tickets.first&.schedule&.formatted_departure_time}"
        .flex.gap-2
          span.font-semibold
          - case booking.payment_method
          - when 'cash'
            span.badge.badge-primary = t('admin.bookings.payment_methods.cash')
          - when 'online'
            span.badge.badge-accent = t('admin.bookings.payment_methods.online')
        .flex.gap-2
          span.font-semibold
          - case booking.payment_status
          - when 'pending'
            span.badge.badge-warning = t('admin.bookings.payment_statuses.pending')
          - when 'completed'
            span.badge.badge-success = t('admin.bookings.payment_statuses.completed')
          - when 'failed'
            span.badge.badge-error = t('admin.bookings.payment_statuses.failed')

.div class="mt-6 flex justify-between items-center"
  .text-sm.text-base-content/70
    | #{t('admin.bookings.pagination.showing')}
    span.font-medium = " #{@pagy.from} "
    | #{t('admin.bookings.pagination.to')}
    span.font-medium = " #{@pagy.to} "
    | #{t('admin.bookings.pagination.of')}
    span.font-medium = " #{@pagy.count} "
    | #{t('admin.bookings.pagination.bookings')}
  .text-center.py-4
    = pagy_nav(@pagy)
