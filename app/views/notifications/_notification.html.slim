- if notification.type == 'DepartureCableNotifier::Notification' || notification.type == 'PaymentReminderCableNotifier::Notification'
  li.notification-item.list-none.p-2[
    class="#{'bg-base-200' unless notification.read?}"
    id="notification_#{notification.id}"
  ]
    = link_to mark_as_read_notification_path(notification),
      class: "flex items-center p-2 hover:bg-base-300 rounded-lg",
      data: { turbo_method: :post, notification_id: notification.id, action: "notifications#markAsRead" } do
      .flex-1
        p.text-sm
          - case notification.type
          - when 'DepartureCableNotifier::Notification'
            | Coach #{notification.params[:coach].license_plate} is departing.
            br
            span.text-xs.text-base-content/60 
              | Route: #{notification.params[:schedule].route.start_location.name} → #{notification.params[:schedule].route.end_location.name}
            br
            span.text-xs.text-base-content/60 
              | Departure: #{notification.params[:schedule].formatted_departure_date} - #{notification.params[:schedule].formatted_departure_time}
          - when 'PaymentReminderCableNotifier::Notification'
            = "Payment reminder for booking ##{notification.params[:booking].id} for schedule on #{notification.params[:schedule].formatted_departure_date} - #{notification.params[:schedule].formatted_departure_time}"
            br
            span.text-xs.text-base-content/60 
              | Amount Due: #{format_currency_vnd(notification.params[:booking].tickets.sum(&:paid_amount))}
            br
            span.text-xs.text-base-content/60 
              | Route: #{notification.params[:schedule].route.start_location.name} → #{notification.params[:schedule].route.end_location.name}
            br
            span.text-xs.text-base-content/60.font-semibold Your Tickets:
            ul.list-disc.list-inside.text-xs
              - notification.params[:booking].tickets.each do |ticket|
                li Seat ##{ticket.seat_number} - #{format_currency_vnd(ticket.paid_amount)}
        p.text-xs.mt-1.text-base-content/60
          = "#{time_ago_in_words(notification.created_at)} ago"
      - unless notification.read?
        .unread-indicator.w-2.h-2.bg-primary.rounded-full
  .divider.my-0
