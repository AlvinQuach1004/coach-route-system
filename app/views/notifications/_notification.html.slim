- if notification.type == 'DepartureCableNotifier::Notification' || notification.type == 'PaymentReminderCableNotifier::Notification' || notification.type == 'CancelBookingCableNotifier::Notification'
  li.notification-item.list-none.p-2[
    class="#{'bg-base-200' unless notification.read?}"
    id="notification_#{notification.id}"
  ]
    = link_to mark_as_read_notification_path(notification),
      class: "flex items-center p-2 hover:bg-base-300 rounded-lg",
      data: { turbo_method: :post, notification_id: notification.id, action: "notifications#markAsRead" } do
      .flex-1
        p.text-sm
          - case notification.type
          - when 'DepartureCableNotifier::Notification'
            = t('notifications.departure', license_plate: notification.params[:coach][:license_plate])
            br
            span.text-xs.text-base-content/60 
              = t('notifications.route', start_location: notification.params[:booking][:start_stop][:location][:name], end_location: notification.params[:booking][:end_stop][:location][:name])
            br
            span.text-xs.text-base-content/60 
              = t('notifications.departure_time', 
                  departure_date: notification.params[:booking][:tickets].first[:formatted_departure_date], 
                  departure_time: notification.params[:booking][:tickets].first[:formatted_departure_time])
            br
            span.text-xs.text-base-content/60.font-semibold = t('notifications.your_tickets')
            ul.list-disc.list-inside.text-xs
              - notification.params[:booking][:tickets].each do |ticket|
                li = t('notifications.seat', seat_number: ticket[:seat_number], price: format_currency_vnd(ticket[:paid_amount]))
          - when 'CancelBookingCableNotifier::Notification'
            = t('notifications.booking_cancelled')
            br
            span.text-xs.text-base-content/60 
              = t('notifications.route', start_location:  notification.params[:booking][:start_stop][:location][:name], end_location: notification.params[:booking][:end_stop][:location][:name])
            br
            span.text-xs.text-base-content/60 
              - ticket = notification.params[:booking][:tickets].first
              = t('notifications.departure_time', departure_date: ticket[:formatted_departure_date], departure_time: ticket[:formatted_departure_time])
        p.text-xs.mt-1.text-base-content/60
          = t('notifications.time_ago', time_ago: time_ago_in_words(notification.created_at))
      - unless notification.read?
        .unread-indicator.w-2.h-2.bg-primary.rounded-full
  .divider.my-0
